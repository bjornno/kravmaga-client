
package kravmaga.generated.remotesetupservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "RemoteSetupServiceSoap", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RemoteSetupServiceSoap {


    /**
     * Returns true if it is possible to set the Primary System for the current user.
     * 
     * @param primSys
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "SetPrimarySystem", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/SetPrimarySystem")
    @WebResult(name = "SetPrimarySystemResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "SetPrimarySystem", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.SetPrimarySystem")
    @ResponseWrapper(localName = "SetPrimarySystemResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.SetPrimarySystemResponse")
    public boolean setPrimarySystem(
        @WebParam(name = "primSys", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        String primSys);

    /**
     * Returns an array of ExTMSSystem objects, including all endpoints and rooms that can be booked by the current user. Typically used during set-up of resources in the external booking system - to connect resources in TMS with resourcess in the external booking system.<br><br>Returns an array of TMSSystem objects.
     * 
     * @return
     *     returns kravmaga.generated.remotesetupservice.ArrayOfUser
     */
    @WebMethod(operationName = "GetUsers", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/GetUsers")
    @WebResult(name = "GetUsersResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "GetUsers", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetUsers")
    @ResponseWrapper(localName = "GetUsersResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetUsersResponse")
    public ArrayOfUser getUsers();

    /**
     * Returns an array of ExTMSSystem objects, including all endpoints and rooms that can be booked by the current user. Typically used during set-up of resources in the external booking system - to connect resources in TMS with resourcess in the external booking system.<br><br>Returns an array of TMSSystem objects.
     * 
     * @return
     *     returns kravmaga.generated.remotesetupservice.ArrayOfTMSSystem
     */
    @WebMethod(operationName = "GetSystemsForUser", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/GetSystemsForUser")
    @WebResult(name = "GetSystemsForUserResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "GetSystemsForUser", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetSystemsForUser")
    @ResponseWrapper(localName = "GetSystemsForUserResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetSystemsForUserResponse")
    public ArrayOfTMSSystem getSystemsForUser();

    /**
     * Returns an array of ExTMSSystem objects, including all endpoints and rooms that can be booked. Typically used during set-up of resources in the external booking system - to connect resources in TMS with resourcess in the external booking system.<br><br>Returns an array of TMSSystem objects.
     * 
     * @return
     *     returns kravmaga.generated.remotesetupservice.ArrayOfTMSSystem
     */
    @WebMethod(operationName = "GetSystems", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/GetSystems")
    @WebResult(name = "GetSystemsResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "GetSystems", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetSystems")
    @ResponseWrapper(localName = "GetSystemsResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetSystemsResponse")
    public ArrayOfTMSSystem getSystems();

    /**
     * Returns information about a specific system. If the system is not found an exception is thrown.<br><br>Input:<br>TMSSystemId - system Id as given in TMS.<br><br>Returns a TMSSystem object.
     * 
     * @param tmsSystemId
     * @return
     *     returns kravmaga.generated.remotesetupservice.TMSSystem
     */
    @WebMethod(operationName = "GetSystemById", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/GetSystemById")
    @WebResult(name = "GetSystemByIdResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "GetSystemById", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetSystemById")
    @ResponseWrapper(localName = "GetSystemByIdResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GetSystemByIdResponse")
    public TMSSystem getSystemById(
        @WebParam(name = "TMSSystemId", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        long tmsSystemId);

    /**
     * Generates a TMS Booking API account in the default user container of the TMS server, along with registrating the user in TMS (as a hidden user not in normal user lists). The user is added to the Site Administrator Group. The user is configured to receive e-mail scheduling event notifications for all creation/update/deletions of bookings. This method is used during installation to create a seperate user for the booking API. The current user must be a TMS Site Administrator, along with being a local computer Administrator in order for the method to complete. The e-mail scheduling event notifications are typically used for updating the external booking system with changes done on the TMS server.<br><br>Input:<br>userNameBase - The base portion of the user name. If a user with the name already exists a numeric postfix is added (e.g tms-confuser ==> tms-confuser1).<br>encPassword - A base64 encoded password that is to be used for the newly created user.<br>emailAddress - The email address of the user.<br>sendNotifications - If the user shall receive scheduling notifications.<br><br>Returns the user name of the created user (NT4 domain/username style).
     * 
     * @param sendNotifications
     * @param emailAddress
     * @param encPassword
     * @param userNameBase
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GenerateConferenceAPIUser", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/GenerateConferenceAPIUser")
    @WebResult(name = "GenerateConferenceAPIUserResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "GenerateConferenceAPIUser", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GenerateConferenceAPIUser")
    @ResponseWrapper(localName = "GenerateConferenceAPIUserResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.GenerateConferenceAPIUserResponse")
    public String generateConferenceAPIUser(
        @WebParam(name = "userNameBase", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        String userNameBase,
        @WebParam(name = "encPassword", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        String encPassword,
        @WebParam(name = "emailAddress", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        String emailAddress,
        @WebParam(name = "sendNotifications", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        boolean sendNotifications);

    /**
     * Used to disable a ConferenceAPI user. E-mail notifications for the user is disabled, and the user is removed from all groups in TMS but the Users group. This is done to keep references valid. The user logged in when executing this method must be a TMS Site Administrator<br><br>This function is typically used during uninstall procedures.<br><br>Input:<br>userName - the full user name in NT4 style (domain\\username) of the user to delete.
     * 
     * @param userName
     */
    @WebMethod(operationName = "DisableConferenceAPIUser", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/DisableConferenceAPIUser")
    @RequestWrapper(localName = "DisableConferenceAPIUser", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.DisableConferenceAPIUser")
    @ResponseWrapper(localName = "DisableConferenceAPIUserResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.DisableConferenceAPIUserResponse")
    public void disableConferenceAPIUser(
        @WebParam(name = "userName", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
        String userName);

    /**
     * Used to check the connection to the web-service. Typically used during installation to check the URL to this web-service.
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsAlive", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/IsAlive")
    @WebResult(name = "IsAliveResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "IsAlive", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsAlive")
    @ResponseWrapper(localName = "IsAliveResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsAliveResponse")
    public boolean isAlive();

    /**
     * Checks if the current user is a member of the TMS Site Administrators group. This is typically used during installation to check if the user installing the integration has enough access towards the TMS server. This method should return True in order for the GenerateConferenceAPIUser method to succseed.<br><br>Returns a boolean value True/False. True if the user is a TMS Site Administrator
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsTMSSiteAdmin", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/IsTMSSiteAdmin")
    @WebResult(name = "IsTMSSiteAdminResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "IsTMSSiteAdmin", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsTMSSiteAdmin")
    @ResponseWrapper(localName = "IsTMSSiteAdminResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsTMSSiteAdminResponse")
    public boolean isTMSSiteAdmin();

    /**
     * Checks if the current user is flagged as an Exchange Integration user and has access to book on behalf of other users.This is typically used during installation to check if the user installing the integration has enough access towards the TMS server.<br><br>Returns a boolean value True/False.
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsTMSServiceUser", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/IsTMSServiceUser")
    @WebResult(name = "IsTMSServiceUserResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "IsTMSServiceUser", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsTMSServiceUser")
    @ResponseWrapper(localName = "IsTMSServiceUserResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsTMSServiceUserResponse")
    public boolean isTMSServiceUser();

    /**
     * Checks if the current user is is a memeber of as group which has access to book on behalf of other users.This is typically used during installation to check if the user installing the integration has enough access towards the TMS server.<br><br>Returns a boolean value True/False.
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsTMSBookOnBehalfUser", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/IsTMSBookOnBehalfUser")
    @WebResult(name = "IsTMSBookOnBehalfUserResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "IsTMSBookOnBehalfUser", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsTMSBookOnBehalfUser")
    @ResponseWrapper(localName = "IsTMSBookOnBehalfUserResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsTMSBookOnBehalfUserResponse")
    public boolean isTMSBookOnBehalfUser();

    /**
     * Checks if the current user can create local / Active Directory accounts in the default user container on the TMS server. This is typically used during installation to check if the user installing the integration has enough access towards the TMS server. This method should return True in order for the GenerateConferenceAPIUser method to succseed.<br><br>Returns a boolean value True/False. True if the user is a local admin user
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsLocalAdmin", action = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/IsLocalAdmin")
    @WebResult(name = "IsLocalAdminResult", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/")
    @RequestWrapper(localName = "IsLocalAdmin", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsLocalAdmin")
    @ResponseWrapper(localName = "IsLocalAdminResponse", targetNamespace = "http://tandberg.net/2004/02/tms/external/booking/remotesetup/", className = "kravmaga.generated.remotesetupservice.IsLocalAdminResponse")
    public boolean isLocalAdmin();

}
